on: [push]
jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      # needed for OIDC
      id-token: write
    steps:
      # See https://github.com/actions/setup-python/issues/374
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v3
        id: setup-python
        with:
          python-version: '3.10'

      - uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - run: poetry install --no-interaction --no-root
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'

      - run: poetry install --no-interaction

      - name: mypy
        run: |
          source .venv/bin/activate
          mypy **/*.py --strict

      - name: flake8
        run: |
          source .venv/bin/activate
          flake8 ./tdsql ./tests

      - name: black
        run: |
          source .venv/bin/activate
          black --check .

      # See https://github.com/google-github-actions/auth
      - id: auth
        uses: google-github-actions/auth@v0
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT }}

      - name: pytest
        run: |
          source .venv/bin/activate
          pytest


  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v3
        id: setup-python
        with:
          python-version: '3.10'

      - uses: snok/install-poetry@v1
      - name: build
        run: poetry build

      - uses: actions/upload-artifact@v3
        with:
          name: package
          path: ./dist

      - name: publish
        run: poetry publish -r testpypi --username dr666m1 --password "$PYPI_PASSWORD"
        if: ${{ github.ref_type == 'tag' }}
        env:
          PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
